import tensorflow as tf
import math

def stdd(num):
    return math.sqrt(2.0 / float(num))

weights = {
    'wc1': tf.Variable(tf.random_normal([3, 3, 3, 64], stddev=stdd(3))),
    'wc2a_2a': tf.Variable(tf.random_normal([1, 1, 64, 64], stddev=stdd(64))),
    'wc2a_2b': tf.Variable(tf.random_normal([3, 3, 64, 64], stddev=stdd(64))),
    'wc2a_2c': tf.Variable(tf.random_normal([1, 1, 64, 256], stddev=stdd(64))),
    'wc2a_1': tf.Variable(tf.random_normal([1, 1, 64, 256], stddev=stdd(64))),
    'wc2b_2a': tf.Variable(tf.random_normal([1, 1, 256, 64], stddev=stdd(256))),
    'wc2b_2b': tf.Variable(tf.random_normal([3, 3, 64, 64], stddev=stdd(64))),
    'wc2b_2c': tf.Variable(tf.random_normal([1, 1, 64, 256], stddev=stdd(64))),
    'wc2c_2a': tf.Variable(tf.random_normal([1, 1, 256, 64], stddev=stdd(256))),
    'wc2c_2b': tf.Variable(tf.random_normal([3, 3, 64, 64], stddev=stdd(64))),
    'wc2c_2c': tf.Variable(tf.random_normal([1, 1, 64, 256], stddev=stdd(64))),
    'wc3a_2a': tf.Variable(tf.random_normal([1, 1, 256, 128], stddev=stdd(256))),
    'wc3a_2b': tf.Variable(tf.random_normal([3, 3, 128, 128], stddev=stdd(128))),
    'wc3a_2c': tf.Variable(tf.random_normal([1, 1, 128, 512], stddev=stdd(128))),
    'wc3a_1': tf.Variable(tf.random_normal([1, 1, 256, 512], stddev=stdd(256))),
    'wc3b_2a': tf.Variable(tf.random_normal([1, 1, 512, 128], stddev=stdd(512))),
    'wc3b_2b': tf.Variable(tf.random_normal([3, 3, 128, 128], stddev=stdd(128))),
    'wc3b_2c': tf.Variable(tf.random_normal([1, 1, 128, 512], stddev=stdd(128))),
    'wc3c_2a': tf.Variable(tf.random_normal([1, 1, 512, 128], stddev=stdd(512))),
    'wc3c_2b': tf.Variable(tf.random_normal([3, 3, 128, 128], stddev=stdd(128))),
    'wc3c_2c': tf.Variable(tf.random_normal([1, 1, 128, 512], stddev=stdd(128))),
    'wc3d_2a': tf.Variable(tf.random_normal([1, 1, 512, 128], stddev=stdd(512))),
    'wc3d_2b': tf.Variable(tf.random_normal([3, 3, 128, 128], stddev=stdd(128))),
    'wc3d_2c': tf.Variable(tf.random_normal([1, 1, 128, 512], stddev=stdd(128))),
    # 'wc4a_2a': tf.Variable(tf.random_normal([1, 1, 512, 256], stddev=stdd(512))),
    # 'wc4a_2b': tf.Variable(tf.random_normal([3, 3, 256, 256], stddev=stdd(256))),
    # 'wc4a_2c': tf.Variable(tf.random_normal([1, 1, 256, 1024], stddev=stdd(256))),
    # 'wc4a_1': tf.Variable(tf.random_normal([1, 1, 512, 1024], stddev=stdd(512))),
    # 'wc4b_2a': tf.Variable(tf.random_normal([1, 1, 1024, 256], stddev=stdd(1024))),
    # 'wc4b_2b': tf.Variable(tf.random_normal([3, 3, 256, 256], stddev=stdd(256))),
    # 'wc4b_2c': tf.Variable(tf.random_normal([1, 1, 256, 1024], stddev=stdd(256))),
    # 'wc4c_2a': tf.Variable(tf.random_normal([1, 1, 1024, 256], stddev=stdd(1024))),
    # 'wc4c_2b': tf.Variable(tf.random_normal([3, 3, 256, 256], stddev=stdd(256))),
    # 'wc4c_2c': tf.Variable(tf.random_normal([1, 1, 256, 1024], stddev=stdd(256))),


    'out': tf.Variable(tf.random_normal([16*16*512, 100], stddev=stdd(16*16*512))),

}

bnorm = {
    #Not trainable variables
    'bn1': 64,
    'bn2a_2a': 64,
    'bn2a_2b': 64,
    'bn2a_2c': 256,
    'bn2a_1': 256,
    'bn2b_2a': 64,
    'bn2b_2b': 64,
    'bn2b_2c': 256,
    'bn2c_2a': 64,
    'bn2c_2b': 64,
    'bn2c_2c': 256,
    'bn3a_2a': 128,
    'bn3a_2b': 128,
    'bn3a_2c': 512,
    'bn3a_1': 512,
    'bn3b_2a': 128,
    'bn3b_2b': 128,
    'bn3b_2c': 512,
    'bn3c_2a': 128,
    'bn3c_2b': 128,
    'bn3c_2c': 512,
    'bn3d_2a': 128,
    'bn3d_2b': 128,
    'bn3d_2c': 512,
    # 'bn4a_2a': 256,
    # 'bn4a_2b': 256,
    # 'bn4a_2c': 1024,
    # 'bn4a_1': 1024,
    # 'bn4b_2a': 256,
    # 'bn4b_2b': 256,
    # 'bn4b_2c': 1024,
    # 'bn4c_2a': 256,
    # 'bn4c_2b': 256,
    # 'bn4c_2c': 1024,
    # 'bout': 100,
}
